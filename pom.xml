<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.fhg.iais.roberta</groupId>
    <artifactId>OpenRobertaConnector</artifactId>
    <version>1.6.2-SNAPSHOT</version>
    <scm>
        <developerConnection>scm:git:git@github.com:OpenRoberta/openroberta-connector.git</developerConnection>
      <tag>HEAD</tag>
  </scm>

    <properties>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
        <buildTimeStamp>${maven.build.timestamp}</buildTimeStamp>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <source.level>1.8</source.level>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
    </properties>

    <repositories>
        <repository>
            <id>ORA-releases</id>
            <name>Open Roberta releases repository</name>
            <url>https://maven.iais.fraunhofer.de/artifactory/openroberta-release</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>ORA-snapshots</id>
            <name>Open Roberta snapshot repository</name>
            <url>https://maven.iais.fraunhofer.de/artifactory/openroberta-snapshot-local</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <dependencies>
        <!--Utility-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.9</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.7</version>
        </dependency>
        <!--Server communication-->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.13</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20190722</version>
        </dependency>
        <dependency>
            <groupId>org.asynchttpclient</groupId>
            <artifactId>async-http-client</artifactId>
            <version>2.11.0</version>
        </dependency>
        <dependency>
            <groupId>net.lingala.zip4j</groupId>
            <artifactId>zip4j</artifactId>
            <version>2.9.1</version>
        </dependency>
        <!--Serial device handling-->
        <dependency>
            <groupId>com.fazecast</groupId>
            <artifactId>jSerialComm</artifactId>
            <version>2.6.0</version>
        </dependency>
        <!--mDNS detection e.g. NAO-->
        <dependency>
            <groupId>org.jmdns</groupId>
            <artifactId>jmdns</artifactId>
            <version>3.5.5</version>
        </dependency>
        <!--SSH connections e.g. NAO-->
        <dependency>
            <groupId>com.hierynomus</groupId>
            <artifactId>sshj</artifactId>
            <version>0.27.0</version>
        </dependency>
        <!--Logging-->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>
        <!--Testing-->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.6.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.6.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>OpenRobertaConnector.properties</include>
                    <include>messages.properties</include>
                    <include>messages_de.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>OpenRobertaConnector.properties</exclude>
                    <exclude>messages.properties</exclude>
                    <exclude>messages_de.properties</exclude>
                </excludes>
            </resource>
            <!--Linux-->
            <resource>
                <targetPath>${basedir}/installers/linux/resources/linux/arduino</targetPath>
                <directory>resources/linux/arduino</directory>
            </resource>
            <resource>
                <targetPath>${basedir}/installers/linux/resources/megaavr</targetPath>
                <directory>resources/megaavr</directory>
            </resource>
            <resource>
                <targetPath>${basedir}/installers/linux</targetPath>
                <directory>src/main/resources/images</directory>
                <includes>
                    <include>OR.png</include>
                </includes>
            </resource>
            <resource>
                <targetPath>${basedir}/installers/linux</targetPath>
                <directory>resources/linux</directory>
                <includes>
                    <include>install-connector</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <!--Windows-->
            <resource>
                <targetPath>${basedir}/installers/windows/resources/windows/arduino</targetPath>
                <directory>resources/windows/arduino</directory>
            </resource>
            <resource>
                <targetPath>${basedir}/installers/windows/resources/windows/esp32</targetPath>
                <directory>resources/windows/esp32</directory>
            </resource>
            <resource>
                <targetPath>${basedir}/installers/windows/resources/megaavr</targetPath>
                <directory>resources/megaavr</directory>
            </resource>
            <resource>
                <targetPath>${basedir}/installers/windows</targetPath>
                <directory>resources/windows</directory>
                <includes>
                    <include>setup.wxs</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <!--OSX-->
            <resource>
                <targetPath>${basedir}/installers/osx/resources/osx/arduino</targetPath>
                <directory>resources/osx/arduino</directory>
            </resource>
            <resource>
                <targetPath>${basedir}/installers/osx/resources/megaavr</targetPath>
                <directory>resources/megaavr</directory>
            </resource>
            <resource>
                <targetPath>${basedir}/installers/osx</targetPath>
                <directory>resources/osx</directory>
                <includes>
                    <include>Info.plist</include>
                    <include>start.sh</include>
                    <include>package/Distribution</include>
                    <include>package/ORCON.pkg/PackageInfo</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!--Create reports-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--Run tests-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M4</version>
            </plugin>
            <!--Copy dependencies-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/libs
                            </outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dependencies-to-linux-installer</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${basedir}/installers/linux/libs
                            </outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dependencies-to-windows-installer</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${basedir}/installers/windows/libs
                            </outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dependencies-to-osx-installer</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${basedir}/installers/osx/libs
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--Create jar-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>libs/</classpathPrefix>
                            <mainClass>
                                de.fhg.iais.roberta.main.OpenRobertaConnector
                            </mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!--Create an exe in windows installer directory-->
            <plugin>
                <groupId>com.akathist.maven.plugins.launch4j</groupId>
                <artifactId>launch4j-maven-plugin</artifactId>
                <version>1.7.25</version>
                <executions>
                    <execution>
                        <id>l4j-clui</id>
                        <phase>package</phase>
                        <goals>
                            <goal>launch4j</goal>
                        </goals>
                        <configuration>
                            <headerType>gui</headerType>
                            <outfile>${basedir}/installers/windows/${project.artifactId}.exe</outfile>
                            <jar>${basedir}/target/${project.artifactId}-${project.version}.jar</jar>
                            <chdir>.</chdir>
                            <icon>src/main/resources/images/OR.ico</icon>
                            <singleInstance>
                                <mutexName>OpenRoberta</mutexName>
                            </singleInstance>
                            <classPath>
                                <mainClass>de.fhg.iais.roberta.main.OpenRobertaConnector</mainClass>
                                <jarLocation>libs/</jarLocation>
                                <jarLocation>resources/</jarLocation>
                                <addDependencies>true</addDependencies>
                            </classPath>
                            <jre>
                                <minVersion>1.8.0</minVersion>
                            </jre>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--Copy jars to linux and osx installers-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>copy-jars</id>
                        <phase>install</phase>
                        <configuration>
                            <target>
                                <copy file="${basedir}/target/${project.artifactId}-${project.version}.jar" tofile="${basedir}/installers/linux/${project.artifactId}.jar" />
                                <copy file="${basedir}/target/${project.artifactId}-${project.version}.jar" tofile="${basedir}/installers/osx/${project.artifactId}.jar" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>linux-script-install-permissions</id>
                        <phase>install</phase>
                        <configuration>
                            <target>
                                <chmod file="${basedir}/installers/linux/install-connector" perm="755" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--Release on git-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <preparationGoals>clean verify</preparationGoals>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                    <pushChanges>false</pushChanges>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
